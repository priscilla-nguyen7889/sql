-- PRISCILLA - FINAL EXAM

SET SERVEROUTPUT ON
SET PAGESIZE 60
SET LINESIZE 999

-- Question 1

SELECT COUNT(*) AS "LESS_THAN_AVERAGE" FROM DATAEMP WHERE SALARY < (SELECT AVG(SALARY) FROM DATAEMP WHERE POSITION ='Senior Editor');


-- Question 2

SELECT d.POSITION, CONCAT(CONCAT(d.LAST_NAME, ', '), d.FIRST_NAME) AS "NAME", d.SALARY 
FROM DATAEMP d
WHERE d.SALARY < (SELECT AVG(d1.SALARY) FROM DATAEMP d1 WHERE d.DEPT = d1.DEPT)
ORDER BY POSITION DESC; 


-- Question 3

COLUMN "SAL_DIFF" FORMAT 99999999999999999.99 

SELECT d.POSITION, CONCAT(CONCAT(d.LAST_NAME, ', '), d.FIRST_NAME) AS "NAME", d.SALARY, 
 ((SELECT AVG(d1.SALARY) FROM DATAEMP d1 WHERE d.DEPT = d1.DEPT) - d.SALARY) AS "SAL_DIFF" 
FROM DATAEMP d
WHERE d.SALARY < (SELECT AVG(d1.SALARY) FROM DATAEMP d1 WHERE d.DEPT = d1.DEPT) 
AND d.POSITION LIKE '%Senior%' 
ORDER BY d.LAST_NAME DESC; 


-- Question 4
CREATE OR REPLACE PROCEDURE DeptInfoPriscilla 
(V_DEPT IN DATAEMP.DEPT%TYPE) 
IS 
V_AVG_SAL DATAEMP.SALARY%TYPE; 
V_TOTAL_SAL DATAEMP.SALARY%TYPE; 
V_EMP_NUM NUMBER; 
EX_DEPT_SELECT EXCEPTION;
PRAGMA EXCEPTION_INIT(EX_DEPT_SELECT, -20001); 
BEGIN 
SELECT COUNT(*) INTO V_EMP_NUM FROM DATAEMP WHERE DEPT = V_DEPT;
IF (V_EMP_NUM=0) THEN 
  RAISE EX_DEPT_SELECT;
ELSE 
  SELECT AVG(SALARY), SUM(SALARY), COUNT(*) 
  INTO V_AVG_SAL, V_TOTAL_SAL, V_EMP_NUM 
  FROM DATAEMP 
  WHERE DEPT = V_DEPT;
  DBMS_OUTPUT.PUT_LINE(CHR(10)||CHR(9)||'   Dept Name: '||V_DEPT); 
  DBMS_OUTPUT.PUT_LINE(CHR(9)||'  Avg Salary: $'||V_AVG_SAL); 
  DBMS_OUTPUT.PUT_LINE(CHR(9)||'Total Salary: $'||V_TOTAL_SAL); 
  DBMS_OUTPUT.PUT_LINE(CHR(9)||'   Dept Size: '||V_EMP_NUM||' Employees'); 
END IF; 
EXCEPTION 
 WHEN EX_DEPT_SELECT THEN 
   DBMS_OUTPUT.PUT_LINE(CHR(10)||'No info found for department: '||V_DEPT);
 WHEN OTHERS THEN 
   DBMS_OUTPUT.PUT_LINE(CHR(10)||'An unexpected ERROR has occurred - '||SQLCODE||'...'||SUBSTR(SQLERRM,1,80));
END;
/

call DeptInfoPriscilla ('Sales');
call DeptInfoPriscilla ('lolwut');

-- Question 5
CREATE OR REPLACE FUNCTION RaisePRISCILLA 
(V_SALARY IN NUMBER, 
 V_PERC IN NUMBER := 3, 
 V_FLAT IN NUMBER := 100) 
 RETURN NUMBER
 IS 
 V_ADD_MONEY NUMBER(38,2); 
 BEGIN 
  V_ADD_MONEY:=(V_SALARY*(V_PERC/100)+V_FLAT);
 RETURN V_ADD_MONEY; 
 END;
 /

SELECT RaisePRISCILLA(200) FROM DUAL;
SELECT RaisePRISCILLA(200,10) FROM DUAL;
SELECT RaisePRISCILLA(200,10,300) FROM DUAL;


-- Question 6
SELECT DEPT, CONCAT(CONCAT(LAST_NAME, ', '), FIRST_NAME) AS "NAME", SALARY, RaisePRISCILLA(SALARY, 2, 200) AS "RAISEAMOUNT", (SALARY+RaisePRISCILLA(SALARY, 2, 200)) AS "NEWSALARY" 
 FROM DATAEMP WHERE DEPT = 'Sales' ORDER BY SALARY DESC; 

-- Question 7
DROP TRIGGER warnSalaryPRISCILLA;

CREATE OR REPLACE TRIGGER warnSalaryPRISCILLA 
AFTER UPDATE 
OF SALARY 
ON DATAEMP 
FOR EACH ROW 
DECLARE 
V_SAL DATAEMP.SALARY%TYPE; 
V_ID  DATAEMP.ID%TYPE;
V_DEPT DATAEMP.DEPT%TYPE;
BEGIN 
V_SAL := :NEW.SALARY;
V_ID := :OLD.ID;
V_DEPT := :OLD.DEPT;
   IF V_DEPT='Research' AND V_SAL<50000 THEN 
	  DBMS_OUTPUT.PUT_LINE('Warning! The employee ID '||V_ID|| ' in the '||V_DEPT||' department has a salary below $50,000.');
   ELSIF 
	V_DEPT!='Research' AND V_SAL<40000 THEN 
	  DBMS_OUTPUT.PUT_LINE('Warning! The employee ID '||V_ID|| ' in the '||V_DEPT||' department has a salary below $40,000.');
   END IF;
END;
/
UPDATE dataemp SET salary = 35000 WHERE ID = 504;
UPDATE dataemp SET salary = 45000 WHERE ID = 504;
UPDATE dataemp SET salary = 45000 WHERE ID = 509;
UPDATE dataemp SET salary = 55000 WHERE ID = 509;

